name: cicd-cezzis-api

on:
  pull_request:
    branches: [main]
    paths: [
      src/**,
      terraform/**,
      test/**,
      .github/workflows/cezzis-api-cicd.yaml
    ]
  push:
    branches: [main]
    paths: [
      src/**,
      terraform/**,
      test/**,
      .github/workflows/cezzis-api-cicd.yaml
    ]

  workflow_dispatch:

jobs:
  gitVersion:
    name: Git version
    permissions: 
      contents: read
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitVersion.outputs.semVer }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0
      
      - name: Install GetVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitVersion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true
  
  build:
    name: Build and test
    needs: [gitVersion]
    uses: mtnvencenzo/workflows/.github/workflows/api-build.yaml@main
    with:
      working_directory: './'
      dotnet_version: '9.x'
      nuget_file_path: './Nuget.Config'
      github_nuget_feed_name: 'github-mtnvencenzo'
      github_nuget_feed_source: 'https://nuget.pkg.github.com/mtnvencenzo/index.json'
      project_path: './Cocktails.Api.sln'
      test_project_path: './Cocktails.Api.sln'
      publish_project_path: './src/Cocktails.Api/Cocktails.Api.csproj'
      artifact_name: 'cocktails-api'
      setup_files: '["./src/Cocktails.Api/Dockerfile-CI"]' # Must be a string representation of a json array with items separated by ', '
      publish_directory_name: 'publish'
      version: ${{ needs.gitVersion.outputs.semVer }}
    secrets:
      github_packages_pat_token: ${{ secrets.GH_PACKAGES_PAT_TOKEN_READ }}

  docker:
    name: Containerize app
    needs: [build, gitVersion]
    uses: mtnvencenzo/workflows/.github/workflows/docker-build-and-push.yaml@main
    with:
      working_directory: './'
      allow_build_and_push: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref_name == 'main' }}
      artifact_name: 'cocktails-api'
      docker_file_name: 'Dockerfile-CI'
      image_tag: '${{ github.sha }}'
      acr_registry_login_server: 'acrveceusgloshared001.azurecr.io'
      acr_image_repository: 'cocktailsapi'

    secrets:
      acr_registry_login_username: ${{ secrets.ACR_REGISTRY_USERNAME }}
      acr_registry_login_password: ${{ secrets.ACR_REGISTRY_PASSWORD }}

  terraform_deploy_prd:
    name: Terraform deploy prd
    uses: mtnvencenzo/workflows/.github/workflows/terraform-plan-and-apply.yaml@main
    needs: [docker, gitVersion]
    with:
      working_directory: terraform
      environment_name: prd
      allow_deploy: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref_name == 'main' }}
      terraform_version: 1.11.4
      arm_client_id: ${{ vars.ARM_CLIENT_ID }}
      arm_subscription_id: ${{ vars.ARM_SUBSCRIPTION_ID }}
      arm_tenant_id: ${{ vars.ARM_TENANT_ID }}
      backend_resource_group_name: rg-vec-eus-administration-001
      backend_storage_account_name: stveceusterraformstat001
      backend_container_name: terraform-cocktails
      backend_blob_key: cocktails/prd-cocktails-api.tfstate
      command_line_args: '-var image_tag=${{ github.sha }}'
    secrets:
      arm_client_secret: ${{ secrets.ARM_CLIENT_SECRET }}
      terraform_module_repo_access_key_secret: ${{ secrets.TERRAFORM_MODULE_REPO_ACCESS_KEY_SECRET }}
      command_line_args: '-var "b2c_terraform_app_registration_client_id=${{ secrets.PRD_B2C_TERRAFORM_APP_REGISTRATION_CLIENT_ID }}" -var "b2c_terraform_app_registration_client_secret=${{ secrets.PRD_B2C_TERRAFORM_APP_REGISTRATION_CLIENT_SECRET }}"'
    
  create_release_prd:
    name: Create release
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref_name == 'main' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [docker, gitVersion, terraform_deploy_prd]
    steps:
      - name: Create release
        uses: mtnvencenzo/workflows/.github/actions/create-release@main
        with:
          version: ${{ needs.gitVersion.outputs.semVer }}

  version_check_prd:
    name: Check deployed version
    if: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref_name == 'main' }}
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [docker, gitVersion, terraform_deploy_prd, create_release_prd]
    steps:
      - name: Verify version
        uses: mtnvencenzo/workflows/.github/actions/check-release-version@main
        with:
          expected_release_version: ${{ needs.gitVersion.outputs.semVer }}
          expected_tag: ${{ github.sha }}
          url: https://api.cezzis.com/prd/cocktails/api/v1/health/version
          property_name: version
          auth_header: X-Key
          timeout_seconds: 180
        env:
          AUTH_VALUE: ${{ secrets.PRD_DEVOPS_APIM_SUBSCRIPTION_KEY }}

  warmup_prd:
    name: Warmup prd
    permissions:
      contents: write
    uses: mtnvencenzo/workflows/.github/workflows/warmup-request.yaml@main
    needs: [docker, gitVersion, terraform_deploy_prd, create_release_prd, version_check_prd]
    with:
      allow_warmup: ${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref_name == 'main' }}
      url: https://api.cezzis.com/prd/cocktails/api/v1/health/ping
      statusCode: 200
      authHeader: X-Key
    secrets:
      authValue: ${{ secrets.PRD_DEVOPS_APIM_SUBSCRIPTION_KEY }}
